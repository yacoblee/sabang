<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LssCnlSvySttus">
	<!-- 취약지역 해제조사 전체현황 파이차트 -->
	<select id="selectCnlSvySttusTotCnt" resultType="egovMap" parameterType="egovMap">
		<![CDATA[		
			SELECT 
				'조사대기' AS NM,
				COALESCE(COUNT(*),0) AS CNT 
			FROM TN_FEIS_CNL_FIELDINFO A
			LEFT OUTER JOIN TN_FEIS_CNL_SVYMEMO B
			ON A.SVY_LABEL = B.SVYID 
			WHERE TO_CHAR(A.CREAT_DT,'YYYY') = (SELECT MAX(TO_CHAR(CREAT_DT,'YYYY')) FROM TN_FEIS_CNL_FIELDINFO B)
			AND B.SVYID IS null
			UNION ALL
			SELECT 
				'조사완료' AS NM,
				COUNT(*) AS CNT
			FROM TN_FEIS_CNL_SVYMEMO
			WHERE TO_CHAR(CREAT_DT,'YYYY') = (SELECT MAX(TO_CHAR(CREAT_DT,'YYYY')) FROM TN_FEIS_CNL_FIELDINFO)
		]]>	 
	</select>
	<!-- 취약지역 해제조사 지역별현황 막대차트-->
	<select id="selectCnlSvySttusRegion" resultType="egovMap">
		<![CDATA[			
			SELECT 
			REGEXP_REPLACE(A.CTPRVN_NM_ABRV,'([^가-힣])*','','g') AS NM,
				COALESCE(B.CNT,0) AS STRP,
				COALESCE(C.CNT,0) AS COMP
			FROM (
				SELECT CTPRVN_NM, CTPRVN_NM_ABRV
				 FROM TF_FEIS_CTPRVN 
			) A 
			LEFT OUTER JOIN (
				 SELECT REGEXP_REPLACE(SVY_ATTR::JSON->4->>'VALUE',' ','','g') AS NM,COUNT(*) AS CNT 
			 	 FROM TN_FEIS_CNL_FIELDINFO
			 	 WHERE TO_CHAR(CREAT_DT,'YYYY') = (SELECT MAX(TO_CHAR(CREAT_DT,'YYYY')) FROM TN_FEIS_CNL_FIELDINFO)
			     GROUP BY REGEXP_REPLACE(SVY_ATTR::JSON->4->>'VALUE',' ','','g')
			) B ON A.CTPRVN_NM = B.NM
			LEFT OUTER JOIN (	
				SELECT 
					REGEXP_REPLACE(SD,' ','','g') AS NM,
					COUNT(*) AS CNT
			 	FROM TN_FEIS_CNL_SVYMEMO
			 	WHERE SD IS NOT NULL
			 	AND TO_CHAR(CREAT_DT,'YYYY') = (SELECT MAX(TO_CHAR(CREAT_DT,'YYYY')) FROM TN_FEIS_CNL_FIELDINFO)
			 	GROUP BY REGEXP_REPLACE(SD,' ','','g')
			) C ON A.CTPRVN_NM = C.NM
		]]>
	</select>
	
	<!-- 취약지역 해제조사 월별현황 막대차트-->
	<select id="selectCnlSvySttusMonth" resultType="egovMap">
		<![CDATA[
			SELECT A.MON AS MON, COALESCE(B.CNT,0) AS CNT
			FROM (
				SELECT SERIES AS MON 
				FROM GENERATE_SERIES(1,12) AS SERIES
			) A 
			LEFT OUTER JOIN (	
				SELECT 
					TO_CHAR(CREAT_DT,'MM')::INT AS MON,
					COUNT(*) AS CNT
			 	FROM TN_FEIS_CNL_SVYMEMO
			 	WHERE TO_CHAR(CREAT_DT,'YYYY') = (SELECT MAX(TO_CHAR(CREAT_DT,'YYYY')) FROM TN_FEIS_CNL_FIELDINFO)
			 	GROUP BY TO_CHAR(CREAT_DT,'MM')
			) B ON A.MON::TEXT = B.MON::TEXT
			ORDER BY MON
		]]>
	</select>
	
	<select id="selectCnlSvyPopultnMember" resultType="int" parameterType="egovMap">	
		SELECT 
			COALESCE(MAX(POPULTN_CNT),0) 
		FROM TN_FEIS_CNL_SVYPOPULTN
		WHERE MBER_ID = #{mberId}
	</select>
	
	<insert id="insertCnlSvyPopultn" parameterType="egovMap">
		INSERT INTO TN_FEIS_CNL_SVYPOPULTN
		(
			MBER_ID,
			POPULTN_CNT,
			CREAT_DT
		)
		VALUES
		(
			#{mber_id},
			#{popultn_cnt}::NUMERIC,
			now()
		)
		ON CONFLICT ON CONSTRAINT TN_FEIS_CNL_SVYPOPULTN_PKEY
	    DO UPDATE
		SET
			POPULTN_CNT = #{popultn_cnt}::NUMERIC
	</insert>
</mapper>